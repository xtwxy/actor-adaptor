//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.21 at 03:04:07 PM CST 
//


package com.wincom.actor.adaptor.messages;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Diagram complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Diagram">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="actors" type="{}ActorList"/>
 *         &lt;element name="connections" type="{}ConnectionList"/>
 *       &lt;/sequence>
 *       &lt;attribute name="aggregateId" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlRootElement(name="diagram")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Diagram", propOrder = {
    "actors",
    "connections"
})
public class Diagram {

    @XmlElement(required = true)
    protected ActorList actors = new ActorList();
    @XmlElement(required = true)
    protected ConnectionList connections = new ConnectionList();
    @XmlAttribute(name = "aggregateId")
    protected String aggregateId;
    @XmlAttribute(name = "name")
    protected String name;

    /**
     * Gets the value of the actors property.
     * 
     * @return
     *     possible object is
     *     {@link ActorList }
     *     
     */
    public ActorList getActors() {
        return actors;
    }

    /**
     * Sets the value of the actors property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActorList }
     *     
     */
    public void setActors(ActorList value) {
        this.actors = value;
    }

    /**
     * Gets the value of the connections property.
     * 
     * @return
     *     possible object is
     *     {@link ConnectionList }
     *     
     */
    public ConnectionList getConnections() {
        return connections;
    }

    /**
     * Sets the value of the connections property.
     * 
     * @param value
     *     allowed object is
     *     {@link ConnectionList }
     *     
     */
    public void setConnections(ConnectionList value) {
        this.connections = value;
    }

    /**
     * Gets the value of the aggregateId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAggregateId() {
        return aggregateId;
    }

    /**
     * Sets the value of the aggregateId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAggregateId(String value) {
        this.aggregateId = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

	public void addActor(Actor a) {
		this.actors.getActor().add(a);
	}

	public void addConnection(Connection c) {
		this.connections.getConnection().add(c);
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((aggregateId == null) ? 0 : aggregateId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Diagram other = (Diagram) obj;
		if (aggregateId == null) {
			if (other.aggregateId != null)
				return false;
		} else if (!aggregateId.equals(other.aggregateId))
			return false;
		return true;
	}
}
